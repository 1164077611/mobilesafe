package com.csx.mobilesafe.activity;

import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;
import android.widget.Toast;

import com.csx.mobilesafe.R;
import com.csx.mobilesafe.utils.StreamUtils;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * @author csx 闪屏页面
 */

public class SplashActivity extends AppCompatActivity {

    private static final int CODE_UPDATE_DIALOG = 1;
    private static final int CODE_ENTER_HOME = 2;
    private static final int CODE_URL_ERROR = 3;
    private static final int CODE_NETWORK_ERROR = 4;
    private static final int CODE_JSON_ERROR = 5;

    private TextView tvName;
    //服务器返回的版本信息
    private String mversionName;
    private int mversionCode;
    private String mdesc;
    private String murl;

    private Handler mHandler=new Handler(){
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what){
                case CODE_UPDATE_DIALOG:
                    showUpdateDialog();
                    break;
                case CODE_ENTER_HOME:
                    enterHome();
                    break;
                case CODE_URL_ERROR:
                    Toast.makeText(getApplicationContext(), "网络链接错误",
                            Toast.LENGTH_SHORT).show();
                    enterHome();
                    break;
                case CODE_NETWORK_ERROR:
                    Toast.makeText(getApplicationContext(), "网络异常",
                            Toast.LENGTH_SHORT).show();
                    enterHome();
                    break;
                case CODE_JSON_ERROR:
                    Toast.makeText(getApplicationContext(), "数据解析异常",
                            Toast.LENGTH_SHORT).show();
                    enterHome();
                    break;

                default:
                    break;
            }
        }
    };
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash);
        tvName=   (TextView) findViewById(R.id.tv_name);
        tvName.setText("版本名:"+ getVersionName());
        checkVersion();
    }

    /**
     * 继承版本
     */
    private void checkVersion() {
        new Thread(){
            @Override
            public void run() {
                Message msg=Message.obtain();
                long startTime=System.currentTimeMillis();
                try {
                    System.out.println("线程中");
                    //10.0.2.2是预留的ip地址访问本机地址
                    HttpURLConnection conn= (HttpURLConnection) new URL("http://192.168.1.110:8080/update.json").openConnection();
                    conn.setRequestMethod("GET");
                    conn.setReadTimeout(2000);
                    conn.setReadTimeout(2000);

                    conn.connect();
                    int responseCode=conn.getResponseCode();

                    if(responseCode==200){
                        InputStream inputStream = conn.getInputStream();
                        String result=StreamUtils.stream2String(inputStream);
                        JSONObject jo=new JSONObject(result);
                        mversionName = jo.getString("versionName");
                        mversionCode = jo.getInt("versionCode");
                        mdesc = jo.getString("des");
                        murl = jo.getString("url");
                        if(getVersionCode()<mversionCode){
                            msg.what=CODE_UPDATE_DIALOG;
                        }else{
                            msg.what=CODE_ENTER_HOME;
                        }
                    }
                } catch (MalformedURLException e) {
                    // url错误
                    e.printStackTrace();
                    msg.what = CODE_URL_ERROR;
                } catch (IOException e) {
                    // 网络异常
                    e.printStackTrace();
                    msg.what = CODE_NETWORK_ERROR;
                } catch (JSONException e) {
                    // json解析异常
                    e.printStackTrace();
                    msg.what = CODE_JSON_ERROR;
                } finally {
                    long endTime = System.currentTimeMillis();
                    long timeUsed = endTime - startTime;// 访问网络使用的时间

                    try {
                        if (timeUsed < 2000) {
                            Thread.sleep(2000 - timeUsed);// 强制等待一段时间, 凑够两秒钟
                        }
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    mHandler.sendMessage(msg);
                }
            }
        }.start();
    }

    /**
     * 升级弹窗
     */
    protected void showUpdateDialog(){
        AlertDialog.Builder builder=new AlertDialog.Builder(this);
        builder.setTitle("发现新版本:"+mversionName);
        builder.setMessage(mdesc);
        builder.setPositiveButton("立即更新", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {

            }
        });
        builder.setNegativeButton("以后再说", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {

            }
        });
        // 用户取消弹窗的监听,比如点返回键
        builder.setOnCancelListener(new DialogInterface.OnCancelListener() {

            @Override
            public void onCancel(DialogInterface dialog) {
                enterHome();
            }
        });
        builder.show();
    }

    /**
     * 跳到主页面
     */
    protected void enterHome(){
        startActivity(new Intent(this,HomeActivity.class));
    }

    /**
     * 获取版本名称
     * @return
     */
    private String getVersionName(){
        PackageManager pm=getPackageManager();
        try {
            PackageInfo packageInfo = pm.getPackageInfo(getPackageName(), 0);
            String versionName=packageInfo.versionName;
//            int mversionCode=packageInfo.mversionCode;
//            System.out.println(mversionName+"--"+mversionCode);
            return versionName;
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }
        return "";
    }

    private int getVersionCode(){
        PackageManager pm=getPackageManager();
        try {
            PackageInfo packageInfo = pm.getPackageInfo(getPackageName(), 0);
            int versionCode=packageInfo.versionCode;
//            int mversionCode=packageInfo.mversionCode;
//            System.out.println(mversionName+"--"+mversionCode);
            return versionCode;
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }
        return -1;
    }

}
